class TerminalOutput{constructor(){this.outputElement=document.querySelector(".terminal-output"),this.maxLines=1e3,this.lineHistory=[],this.scrollLock=!1,this.scrollThreshold=50,this.init()}init(){this.outputElement.addEventListener("scroll",()=>{this.handleScroll()})}handleScroll(){const{scrollTop:t,scrollHeight:e,clientHeight:i}=this.outputElement,l=e-t<=i+this.scrollThreshold;this.scrollLock=!l}append(t,e="default"){const i=document.createElement("div");i.className=`output-line ${e}`,i.textContent=t,this.lineHistory.push({text:t,type:e,timestamp:Date.now()}),this.lineHistory.length>this.maxLines&&(this.lineHistory.shift(),this.outputElement.removeChild(this.outputElement.firstChild)),this.outputElement.appendChild(i),this.scrollLock||this.scrollToBottom()}scrollToBottom(){this.outputElement.scrollTop=this.outputElement.scrollHeight}clear(){this.outputElement.innerHTML="",this.lineHistory=[]}search(t){const e=new RegExp(t,"i");return this.lineHistory.filter(t=>e.test(t.text))}highlight(t){const e=new RegExp(t,"gi");this.outputElement.querySelectorAll(".output-line").forEach(t=>{const i=t.textContent.replace(e,t=>`<span class="highlight">${t}</span>`);t.innerHTML=i})}formatOutput(t){return t.replace(/\n/g,"<br>").replace(/\t/g,"    ").replace(/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]/g,"")}getHistory(){return this.lineHistory}exportHistory(){return this.lineHistory.map(t=>`[${new Date(t.timestamp).toLocaleTimeString()}] ${t.text}`).join("\n")}}const terminalOutput=new TerminalOutput;export default terminalOutput;