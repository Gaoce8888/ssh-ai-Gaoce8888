import{TerminalManager}from"./modules/terminal.js";import{SSHConnection}from"./modules/ssh.js";import{AIChat}from"./modules/ai-chat.js";import{ConfigManager}from"./modules/config.js";import{UIManager}from"./modules/ui.js";import{Utils}from"./modules/utils.js";class SSHAITerminalApp{constructor(){this.terminal=null,this.sshConnection=null,this.aiChat=null,this.configManager=null,this.uiManager=null,this.isInitialized=!1}async init(){try{this.showLoadingScreen(),Utils.init(),this.uiManager=new UIManager,await this.uiManager.init(),this.configManager=new ConfigManager,await this.configManager.init(),this.terminal=new TerminalManager("terminal"),await this.terminal.init(),this.sshConnection=new SSHConnection(this.terminal),await this.sshConnection.init(),window.sshConnection=this.sshConnection,this.aiChat=new AIChat(this.terminal,this.sshConnection),await this.aiChat.init(),this.bindEvents(),await this.loadSavedConfigs(),this.isInitialized=!0,this.hideLoadingScreen(),this.showApp()}catch(e){console.error("应用初始化失败:",e),this.showError("应用初始化失败，请刷新页面重试")}}bindEvents(){document.getElementById("ssh-form").addEventListener("submit",e=>{e.preventDefault(),this.handleSSHConnect()});document.getElementById("save-config-btn").addEventListener("click",()=>this.handleSaveConfig());document.getElementById("ai-form").addEventListener("submit",e=>{e.preventDefault(),this.handleAISettingsSave()});document.getElementById("ai-provider").addEventListener("change",e=>{this.handleProviderChange(e.target.value)});document.querySelectorAll(".nav-tab").forEach(e=>{e.addEventListener("click",()=>this.handleTabSwitch(e))});document.getElementById("menu-toggle").addEventListener("click",()=>this.uiManager.toggleSidebar());document.querySelector(".sidebar-close").addEventListener("click",()=>this.uiManager.toggleSidebar());document.querySelector(".chat-header").addEventListener("click",()=>this.uiManager.toggleChat());document.querySelectorAll(".quick-action").forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.prompt;this.aiChat.sendQuickPrompt(t)})}),window.addEventListener("resize",Utils.debounce(()=>{this.terminal.fit()},300)),window.addEventListener("beforeunload",()=>{this.cleanup()})}async handleSSHConnect(){const e=Utils.getFormData("ssh-form");if(e.host&&e.username&&e.password)try{this.sshConnection.isConnected?await this.sshConnection.disconnect():await this.sshConnection.connectWithDiagnostics(e,!0)}catch(e){this.showError("连接失败: "+e.message),this.terminal&&this.terminal.writeln(`\r\n*** 连接失败: ${e.message} ***\r\n`)}else this.showError("请填写所有必填字段")}async handleSaveConfig(){const e=prompt("请输入配置名称:");if(!e)return;const t=Utils.getFormData("ssh-form");t.name=e;try{await this.configManager.saveSSHConfig(t),await this.loadSavedConfigs(),this.showSuccess("配置保存成功")}catch(e){this.showError("保存失败: "+e.message)}}async handleAISettingsSave(){const e=Utils.getFormData("ai-form");try{await this.configManager.saveAIConfig(e),this.aiChat.updateConfig(e),this.showSuccess("AI设置保存成功")}catch(e){this.showError("保存失败: "+e.message)}}handleProviderChange(e){const t=document.getElementById("ai-model"),n=document.getElementById("openai-models"),i=document.getElementById("claude-models");"openai"===e?(n.style.display="",i.style.display="none",t.value="gpt-3.5-turbo"):"claude"===e&&(n.style.display="none",i.style.display="",t.value="claude-3.7-sonnet-20250224");const s=document.getElementById("api-key");"openai"===e?s.placeholder="输入您的OpenAI API Key":"claude"===e&&(s.placeholder="输入您的Anthropic API Key")}handleTabSwitch(e){const t=e.dataset.tab;this.uiManager.switchTab(t)}async loadSavedConfigs(){try{const e=await this.configManager.getSSHConfigs();this.renderConfigList(e);const t=await this.configManager.getAIConfig();t&&(Utils.setFormData("ai-form",t),this.aiChat.updateConfig(t),t.provider&&this.handleProviderChange(t.provider))}catch(e){console.error("加载配置失败:",e)}}renderConfigList(e){const t=document.getElementById("config-list");t.innerHTML="",e.forEach((e,n)=>{const i=document.createElement("div");i.className="config-item",i.innerHTML=`\n                <span class="config-name">${Utils.escapeHtml(e.name)}</span>\n                <div class="config-actions">\n                    <button class="btn btn-secondary" data-index="${n}">加载</button>\n                    <button class="btn btn-secondary" data-index="${n}">删除</button>\n                </div>\n            `;i.querySelector(".btn:first-child").addEventListener("click",async()=>{Utils.setFormData("ssh-form",e),this.showSuccess("配置已加载")});i.querySelector(".btn:last-child").addEventListener("click",async()=>{if(confirm("确定要删除这个配置吗？"))try{await this.configManager.deleteSSHConfig(n),await this.loadSavedConfigs(),this.showSuccess("配置已删除")}catch(e){this.showError("删除失败: "+e.message)}}),t.appendChild(i)})}showLoadingScreen(){document.getElementById("loading-screen").style.display="flex"}hideLoadingScreen(){const e=document.getElementById("loading-screen");e.style.opacity="0",setTimeout(()=>{e.style.display="none"},300)}showApp(){const e=document.getElementById("app");e.style.display="flex",e.style.opacity="0",setTimeout(()=>{e.style.opacity="1"},10)}showError(e){this.uiManager.showNotification(e,"error")}showSuccess(e){this.uiManager.showNotification(e,"success")}cleanup(){this.sshConnection&&this.sshConnection.disconnect(),this.terminal&&this.terminal.dispose()}}document.addEventListener("DOMContentLoaded",()=>{(new SSHAITerminalApp).init()}),"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.js").then(e=>console.log("ServiceWorker 注册成功")).catch(e=>console.log("ServiceWorker 注册失败:",e))});