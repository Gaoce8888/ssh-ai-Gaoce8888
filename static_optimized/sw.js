const CACHE_NAME="ssh-ai-terminal-v1",urlsToCache=["/","/index.html","/css/reset.css","/css/variables.css","/css/components.css","/css/layout.css","/css/terminal.css","/css/chat.css","/css/responsive.css","/js/app.js","/js/modules/terminal.js","/js/modules/ssh.js","/js/modules/ai-chat.js","/js/modules/config.js","/js/modules/ui.js","/js/modules/utils.js","/manifest.json","/favicon.ico"];self.addEventListener("install",e=>{console.log("[ServiceWorker] Install"),e.waitUntil(caches.open(CACHE_NAME).then(e=>(console.log("[ServiceWorker] Caching app shell"),e.addAll(urlsToCache))).catch(e=>{console.error("[ServiceWorker] Failed to cache:",e)}))}),self.addEventListener("activate",e=>{console.log("[ServiceWorker] Activate"),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==CACHE_NAME)return console.log("[ServiceWorker] Removing old cache:",e),caches.delete(e)}))))}),self.addEventListener("fetch",e=>{"GET"===e.request.method&&(e.request.url.includes("/ws")||e.request.url.includes("/api/")||e.respondWith(caches.match(e.request).then(s=>{if(s)return s;const c=e.request.clone();return fetch(c).then(s=>{if(!s||200!==s.status||"basic"!==s.type)return s;if(s.status>=300)return s;const c=s.clone();return caches.open(CACHE_NAME).then(s=>{s.put(e.request,c)}).catch(e=>{console.error("[ServiceWorker] Failed to cache response:",e)}),s}).catch(e=>(console.error("[ServiceWorker] Fetch failed:",e),caches.match("/index.html")))}).catch(e=>{console.error("[ServiceWorker] Cache match failed:",e)})))}),self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()});